### System Prompt
You are an intelligent programming assistant.

### User Message
Generate complete and fully implemented Python code based on the following annotated PlantUML class diagram including the import of all necessary libraries:

@startuml ticketing-system
class Ticket {
    ticket_id : int
    description : String
    status : String
    customer : Customer
    assigned_agent : Agent
    +__init__(ticket_id, customer, description)
    ' initializes Ticket object with given information, no assigned agent, and a "Open" status
    +assign_agent(agent)
    ' assigns agent to this ticket and adds this ticket to that agent's tickets
}

class Customer {
    name : String
    contact_details : String
    ticket_system : TicketSystem
    +__init__(name, ticket_system, contact_details)
    +submit_ticket(description) : Ticket
    ' calls ticket_system.create_ticket(self, description) to submit a ticket to the system
}

class Agent {
    name : String
    tickets : List of assigned tickets
    +__init__(name)
}

class TicketSystem {
    tickets : List of tickets
    customers : List of customers
    agents : List of agents
    +__init__()
    ' initializes tickets, customers, and agents to empty lists
    +create_customer(name, contact_details) : Customer
    ' creates a customer with given information as part of this ticket system, adds them to customers
    +create_ticket(customer, description) : Ticket
    ' creates a ticket with the given information and an id of 1 + the length of the tickets list, adds it to tickets
    +create_agent(name) : Agent
    ' creates an agent and adds them to agents
    +close_ticket(ticket)
    ' sets given ticket status to closed and removes it from it's assigned agent's ticket list if an agent is assigned
    +assign_ticket(ticket, agent)

}

TicketSystem "1" -- "*" Ticket : creates
TicketSystem "1" -- "*" Customer : creates
TicketSystem "1" -- "*" Agent : creates
Customer "1" -- "*" Ticket : submits
@enduml

### Assistant

```python
import uuid
from typing import List

class Ticket:
    def __init__(self, ticket_id: int, customer: Customer, description: str):
        self.ticket_id = ticket_id
        self.description = description
        self.status = "Open"
        self.customer = customer
        self.assigned_agent = None
    
    def assign_agent(self, agent: Agent):
        self.assigned_agent = agent
        agent.tickets.append(self)

class Customer:
    def __init__(self, name: str, ticket_system: TicketSystem, contact_details: str):
        self.name = name
        self.contact_details = contact_details
        self.ticket_system = ticket_system
    
    def submit_ticket(self, description: str) -> Ticket:
        return self.ticket_system.create_ticket(self, description)

class Agent:
    def __init__(self, name: str):
        self.name = name
        self.tickets = []

class TicketSystem:
    def __init__(self):
        self.tickets = []
        self.customers = []
        self.agents = []
    
    def create_customer(self, name: str, contact_details: str) -> Customer:
        new_customer = Customer(name, self, contact_details)
        self.customers.append(new_customer)
        return new_customer
    
    def create_ticket(self, customer: Customer, description: str) -> Ticket:
        new_ticket = Ticket(len(self.tickets)+1, customer, description)
        self.tickets.append(new_ticket)
        return new_ticket
    
    def create_agent(self, name: str) -> Agent:
        new_agent = Agent(name)
        self.agents.append(new_agent)
        return new_agent
    
    def close_ticket(self, ticket: Ticket):
        ticket.status = "Closed"
        if ticket.assigned_agent != None:
            ticket.assigned_agent.tickets.remove(ticket)
    
    def assign_ticket(self, ticket: Ticket, agent: Agent):
        ticket.assigned_agent = agent
        agent.tickets.append(ticket)
```